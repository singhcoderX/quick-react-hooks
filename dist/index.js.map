{"version":3,"file":"index.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,UACR,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,SAAUJ,GACQ,iBAAZC,QACdA,QAAwB,eAAID,EAAQG,QAAQ,UAE5CJ,EAAqB,eAAIC,EAAQD,EAAY,MAC9C,CATD,CASGO,MAAOC,G,kCCTVL,EAAOD,QAAUM,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaV,QAGrB,IAAIC,EAASM,EAAyBE,GAAY,CAGjDT,QAAS,CAAC,GAOX,OAHAY,EAAoBH,GAAUR,EAAQA,EAAOD,QAASQ,GAG/CP,EAAOD,OACf,CCrBAQ,EAAoBK,EAAI,CAACb,EAASc,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAEhB,EAASe,IAC5EE,OAAOC,eAAelB,EAASe,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDP,EAAoBQ,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFd,EAAoBkB,EAAK1B,IACH,oBAAX2B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAelB,EAAS2B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAelB,EAAS,aAAc,CAAE6B,OAAO,GAAO,E,gECFxDC,EAAsB,CAC1BC,MAAO,qBACPC,OAAQ,4CACRC,MAAO,6CACPC,UAAW,uBAGPC,EACJlB,OAAOmB,KAAKN,GAAqBO,UAE7BC,EAAiB,SAACC,GACtB,IAAIC,EAA2B,CAC7BC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,cAAc,GAYhB,OATIT,EAAkBU,SAASN,IAC7BJ,EAAkBW,SAAQ,SAACC,GAErBA,GAAcR,IAChBC,EAFe,MAAQO,IAEwB,EAEnD,IAGKP,CACT,EAEMQ,EAAmB,WACvB,IAAIC,EAAgB,GASpB,OARqBtC,aAAVuC,QACTf,EAAkBW,SAAQ,SAACP,GACzB,IAAMY,EAAaD,OAAOC,WAAWrB,EAAoBS,KACpDU,IAAiBE,aAAU,EAAVA,EAAYC,WAChCH,EAAgBV,EAEpB,IAEKU,CACT,EAmDA,QAjD4B,WAIpB,OAA8B,IAAAI,UAGjC,CACDd,OAAQS,IACRR,YAAaF,EAAeU,OALvBM,EAAU,KAAEC,EAAa,MAQhC,IAAAC,YAAU,WACR,IAAMC,EAAyC,GAS/C,OAPAtB,EAAkBuB,KAAI,SAACnB,EAAgBoB,GACrCF,EAAgBE,GAAOT,OAAOC,WAC5BrB,EAAoBS,IAEtBkB,EAAgBE,GAAKC,iBAAiB,SAAUC,EAClD,IAEO,WACLJ,EAAgBC,KAAI,SAACP,GACnBA,EAAWW,oBAAoB,SAAUD,EAC3C,GACF,CACF,GAAG,IAEH,IAAMA,EAAe,SAACE,GACpB,GAAIA,aAAC,EAADA,EAAGX,QAAS,CACd,IAAIH,EAAgBD,IACpBgB,EAAkBf,EACpB,CACF,EAEMe,EAAoB,SAACf,GACzB,IAAKK,GAAcL,GAAiBK,EAAWf,OAAQ,CACrD,IAAI0B,EAAgB,CAClB1B,OAAQU,EACRT,YAAaF,EAAeW,IAG9BM,EAAcU,EAChB,CACF,EACA,OAAOX,CACT,E","sources":["webpack://ReactEasyHooks/webpack/universalModuleDefinition","webpack://ReactEasyHooks/external umd \"react\"","webpack://ReactEasyHooks/webpack/bootstrap","webpack://ReactEasyHooks/webpack/runtime/define property getters","webpack://ReactEasyHooks/webpack/runtime/hasOwnProperty shorthand","webpack://ReactEasyHooks/webpack/runtime/make namespace object","webpack://ReactEasyHooks/./src/useMediaQueryScreen/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactEasyHooks\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactEasyHooks\"] = factory(root[\"react\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__155__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__155__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { useEffect, useState } from \"react\";\nimport { ScreenProps } from \"./types\";\n\nconst SCREEN_BREAK_POINTS = {\n  small: `(max-width: 671px)`,\n  medium: `(min-width: 672px) and (max-width: 979px)`,\n  large: `(min-width: 980px) and (max-width: 1259px)`,\n  largeplus: `(min-width: 1260px)`,\n};\n\nconst SUPPORTED_SCREENS: Array<string> =\n  Object.keys(SCREEN_BREAK_POINTS).reverse();\n\nconst getScreenProps = (screen?): ScreenProps => {\n  let screenProps: ScreenProps = {\n    is_small: false,\n    is_medium: false,\n    is_large: false,\n    is_largeplus: false,\n  };\n\n  if (SUPPORTED_SCREENS.includes(screen)) {\n    SUPPORTED_SCREENS.forEach((screenType) => {\n      let screenProp = \"is_\" + screenType;\n      if (screenType == screen) {\n        screenProps[screenProp as keyof ScreenProps] = true;\n      }\n    });\n  }\n\n  return screenProps;\n};\n\nconst getMatchedScreen = (): string => {\n  let matchedScreen = \"\";\n  if (typeof window != undefined) {\n    SUPPORTED_SCREENS.forEach((screen) => {\n      const matchMedia = window.matchMedia(SCREEN_BREAK_POINTS[screen]);\n      if (!matchedScreen && matchMedia?.matches) {\n        matchedScreen = screen;\n      }\n    });\n  }\n  return matchedScreen;\n};\n\nconst useMediaQueryScreen = (): {\n  screen: string;\n  screenProps: ScreenProps;\n} => {\n  const [screenData, setScreenData] = useState<{\n    screen: string;\n    screenProps: ScreenProps;\n  }>({\n    screen: getMatchedScreen(),\n    screenProps: getScreenProps(getMatchedScreen()),\n  });\n\n  useEffect(() => {\n    const matchMediaArray: Array<MediaQueryList> = [];\n\n    SUPPORTED_SCREENS.map((screen: string, idx: number) => {\n      matchMediaArray[idx] = window.matchMedia(\n        SCREEN_BREAK_POINTS[screen as keyof {}]\n      );\n      matchMediaArray[idx].addEventListener(\"change\", handleChange);\n    });\n\n    return () => {\n      matchMediaArray.map((matchMedia) => {\n        matchMedia.removeEventListener(\"change\", handleChange);\n      });\n    };\n  }, []);\n\n  const handleChange = (e?: MediaQueryListEvent) => {\n    if (e?.matches) {\n      let matchedScreen = getMatchedScreen();\n      updateScreenProps(matchedScreen);\n    }\n  };\n\n  const updateScreenProps = (matchedScreen: string) => {\n    if (!screenData || matchedScreen != screenData.screen) {\n      let newScreenData = {\n        screen: matchedScreen,\n        screenProps: getScreenProps(matchedScreen),\n      };\n\n      setScreenData(newScreenData);\n    }\n  };\n  return screenData;\n};\n\nexport default useMediaQueryScreen;\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__155__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","SCREEN_BREAK_POINTS","small","medium","large","largeplus","SUPPORTED_SCREENS","keys","reverse","getScreenProps","screen","screenProps","is_small","is_medium","is_large","is_largeplus","includes","forEach","screenType","getMatchedScreen","matchedScreen","window","matchMedia","matches","useState","screenData","setScreenData","useEffect","matchMediaArray","map","idx","addEventListener","handleChange","removeEventListener","e","updateScreenProps","newScreenData"],"sourceRoot":""}